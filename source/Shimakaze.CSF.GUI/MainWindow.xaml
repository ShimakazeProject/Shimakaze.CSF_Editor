<Fluent:RibbonWindow
  x:Class="Shimakaze.CSF.GUI.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:Fluent="urn:fluent-ribbon"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:local="clr-namespace:Shimakaze.CSF.GUI"
  TextElement.Foreground="{DynamicResource MaterialDesignBody}"
  TextElement.FontWeight="Regular"
  TextElement.FontSize="13"
  TextOptions.TextFormattingMode="Ideal"
  TextOptions.TextRenderingMode="Auto"
  Background="{DynamicResource MaterialDesignPaper}"
  FontFamily="{DynamicResource MaterialDesignFont}"
  mc:Ignorable="d"
    d:DesignHeight="480" d:DesignWidth="800"
  Title="CSF Editor Kai 3">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Fluent:Ribbon Grid.Row="0">
            <!--StartScreen-->
            <Fluent:Ribbon.StartScreen>
                <local:StartScreen x:Name="StartScreen"/>
            </Fluent:Ribbon.StartScreen>

            <Fluent:Ribbon.ContextualGroups>
                <Fluent:RibbonContextualTabGroup>
                    
                </Fluent:RibbonContextualTabGroup>
            </Fluent:Ribbon.ContextualGroups>

            <!--Quick Access Toolbar Items-->
            <Fluent:Ribbon.QuickAccessItems>
                <!--Use Content or Target Property to set QAT item-->
                <Fluent:QuickAccessMenuItem IsChecked="true">
                    <Fluent:Button Header="Pink" />
                </Fluent:QuickAccessMenuItem>

                <!--You Can Just Bind with Any Control-->
                <Fluent:QuickAccessMenuItem Target="{Binding ElementName=buttonGreen}" />
            </Fluent:Ribbon.QuickAccessItems>

            <!--Backstage-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:BackstageTabItem Header="打开" />
                        <Fluent:Button Header="保存" />
                        <Fluent:Button Header="另存为" />
                        <Fluent:Button Header="新建" />
                        <Fluent:Button Header="导入" />
                        <Fluent:Button Header="导出" />
                        <Fluent:Button Header="合并" />
                        <Fluent:Button Header="关闭" />
                        <Fluent:Button Header="退出" />
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>

            <!--Tabs-->
            <Fluent:RibbonTabItem Header="编辑" KeyTip="E">
                <Fluent:RibbonGroupBox Header="类型">
                    <Fluent:Button Header="新建类型" KeyTip="C"/>
                    <!-- 危险操作 -->
                    <!-- 可以重命名整个类型的标签如"Name:" 无底深坑预定 -->
                    <Fluent:Button Header="重命名类型" KeyTip="F2"/>
                    <!-- 直接Drop掉整个类型 包括所有的标签和字符串 -->
                    <Fluent:Button Header="移除类型" KeyTip="M"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="标签">
                    <Fluent:Button Header="增加标签" KeyTip="L"/>
                    <Fluent:Button Header="编辑标签" KeyTip="A"/>
                    <!--直接Drop掉整个标签 包括任何字符串 -->
                    <Fluent:Button Header="删除标签" KeyTip="D"/>
                </Fluent:RibbonGroupBox>


                <Fluent:RibbonGroupBox Header="Others">
                    <Fluent:Button Header="DarkMode" Click="ToggleButton_Click" KeyTip="T"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

        </Fluent:Ribbon>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="50" Width="200" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DataGrid>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Class" />
                </DataGrid.Columns>
            </DataGrid>
            <GridSplitter Grid.Column="1" Width="1" Background="LightGray" VerticalAlignment="Stretch"
                    HorizontalAlignment="Center" />
            <DataGrid Grid.Column="2">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Label" Width="200" MinWidth="50" />
                    <DataGridTextColumn Header="Value" Width="*" MinWidth="50" />
                    <DataGridTextColumn Header="Extra" Width="200" MinWidth="10" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <!-- 状态栏 -->
        <Fluent:StatusBar Grid.Row="2" VerticalContentAlignment="Center" Background="{DynamicResource Fluent.Ribbon.Brushes.Backstage.Background}">
            <Fluent:StatusBar.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="Fluent:TextBox">
                </Style>
            </Fluent:StatusBar.Resources>
            <Fluent:StatusBarItem Title="文件标记" Value="文件的版本和语言" HorizontalAlignment="Left" Margin="5 0 0 1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Version:" Margin="5 0 0 0"/>
                    <Fluent:TextBox Text="3" Width="32" HorizontalContentAlignment="Right"/>
                    <TextBlock Text="Language:" Margin="5 0 0 0"/>
                    <Fluent:TextBox Text="FFFFFFFF" Width="80" HorizontalContentAlignment="Right"/>
                </StackPanel>
            </Fluent:StatusBarItem>

            <Separator HorizontalAlignment="Left"/>
            <Fluent:StatusBarItem Title="Second left placed item"
                            Value="Value shown in ContextMenu"
                            ToolTip="Your ToolTip"
                            Content="Content shown in StatusBar"
                            HorizontalAlignment="Left" />

            <Separator HorizontalAlignment="Right"/>

            <Fluent:StatusBarItem Title="文件信息" Value="统计信息" HorizontalAlignment="Right" Margin="0 0 5 0">
                <Border BorderBrush="White" BorderThickness="1">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="类型数:" Margin="5 0 0 0" />
                        <TextBlock Text="3" Margin="0 0 5 0" />
                        <TextBlock Text="标签数:" Margin="5 0 0 0" />
                        <TextBlock Text="0" Margin="0 0 5 0" />
                        <TextBlock Text="字符串数:" Margin="5 0 0 0" />
                        <TextBlock Text="3" Margin="0 0 5 0" />
                    </StackPanel>
                </Border>

            </Fluent:StatusBarItem>
            <Fluent:StatusBarItem Title="类型信息" Value="统计信息" HorizontalAlignment="Right" Margin="0 0 5 0">
                <Border BorderBrush="White" BorderThickness="1">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="标签数:" Margin="5 0 0 0" />
                        <TextBlock Text="0" Margin="0 0 5 0"/>
                        <TextBlock Text="字符串数:" Margin="5 0 0 0" />
                        <TextBlock Text="3" Margin="0 0 5 0" />
                    </StackPanel>
                </Border>

            </Fluent:StatusBarItem>
            <Fluent:StatusBarItem Title="标签信息" Value="统计信息" HorizontalAlignment="Right" Margin="0 0 5 0">
                <Border BorderBrush="White" BorderThickness="1">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="字符串数:" Margin="5 0 0 0" />
                        <TextBlock Text="3" Margin="0 0 5 0" />
                    </StackPanel>
                </Border>
            </Fluent:StatusBarItem>




        </Fluent:StatusBar>
    </Grid>

</Fluent:RibbonWindow>