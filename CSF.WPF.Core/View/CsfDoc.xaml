<UserControl
    x:Class="CSF.WPF.Core.View.CsfDoc"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cvtr="clr-namespace:CSF.WPF.Core.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CSF.WPF.Core.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:CSF.WPF.Core.ViewModel"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.DataContext>
        <vm:CsfDocViewModel x:Name="ViewModel" />
    </UserControl.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <DataGrid
            x:Name="TypesList"
            AutoGenerateColumns="False"
            ItemsSource="{Binding TypeList.Types}"
            SelectedItem="{Binding DataList}"
            Style="{DynamicResource MahApps.Styles.DataGrid}">
            <DataGrid.Columns>
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Name}"
                    Header="Types"
                    IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
        <GridSplitter Width="1" HorizontalAlignment="Right" />
        <DataGrid
            x:Name="DatasList"
            Grid.Column="1"
            AlternationCount="2"
            AutoGenerateColumns="False"
            ItemsSource="{Binding DataList}"
            SelectedItem="{Binding Data}"
            SelectionMode="Extended">
            <DataGrid.RowStyle>
                <Style BasedOn="{StaticResource MahApps.Styles.DataGridRow}" TargetType="DataGridRow">
                    <Setter Property="Visibility" Value="{Binding Visibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="AlternationIndex" Value="1" />
                                <Condition Property="DataGridRow.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.Highlight}" />
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.HighlightText}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="AlternationIndex" Value="1" />
                                <Condition Property="DataGridRow.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Badged.DisabledBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.DataGrid.DisabledHighlight}" />
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.HighlightText}" />
                        </MultiTrigger>
                        <!--<Trigger Property="AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#40000000"/>
                        </Trigger>-->
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.InputBindings>
                <MouseBinding Command="{Binding EditCommand}" MouseAction="LeftDoubleClick" />
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <DataGridTextColumn
                    Width="200"
                    Binding="{Binding LabelName}"
                    Header="Labels"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding LabelValues[0].ValueString}"
                    Header="Values"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    MinWidth="100"
                    Binding="{Binding LabelValues[0].ExtraString}"
                    Header="ExtraValue"
                    IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
